(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{499:function(s,t,e){"use strict";e.r(t);var a=e(44),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"nestjs-介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nestjs-介绍"}},[s._v("#")]),s._v(" NestJS 介绍")]),s._v(" "),e("p",[s._v("nest 是一个渐进的nodejs框架，可以在typescript和ES6、ES7、ES8 之上构建高效、可伸缩的企业级服务器端应用程序。")]),s._v(" "),e("p",[s._v("nest 基于typescript编写，并且结合了 OOP（面向对象编程），FP（函数式编程）和 FRP （函数式响应编程）的相关理念。在设计上的很多灵感来自于 Angular，Angular 的很多模 式又来自于 Java 中的 Spring 框架，依赖注入、面向切面编程等，所以我们也可以认为： Nest 是 Node.js 版的 Spring 框架。")]),s._v(" "),e("p",[s._v("Nest 框架底层 HTTP 平台默认是基于 Express 实现的，所以无需担心第三方库的缺失。 Nest 旨在成为一个与平台无关的框架。 通过平台，可以创建可重用的逻辑部件，开发人员可以利用这些部件来跨越多种不同类型的应用程序。从技术上讲，Nest 可以在创建适配器 后使用任何 Node HTTP 框架。 有两个支持开箱即用的 HTTP 平台：express 和 fastify。 您 可以选择最适合您需求的产品。")]),s._v(" "),e("p",[s._v("NestJs 的核心思想：就是提供了一个层与层直接的耦合度极小,抽象化极高的一个架构 体系。")]),s._v(" "),e("h2",{attrs:{id:"nestjs-环境搭建-、创建运行-nestjs-项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nestjs-环境搭建-、创建运行-nestjs-项目"}},[s._v("#")]),s._v(" NestJS 环境搭建 、创建运行 NestJS 项目")]),s._v(" "),e("h3",{attrs:{id:"安装-nest-cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-nest-cli"}},[s._v("#")]),s._v(" 安装 Nest CLI：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" i -g @nestjs/cli \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者 ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v(" global "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" @nestjs/cli\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h3",{attrs:{id:"查看nest的版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看nest的版本"}},[s._v("#")]),s._v(" 查看nest的版本:")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("nest -v "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看当前 nest/cli的版本")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"使用-nest-cli-创建项项目并运行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-nest-cli-创建项项目并运行"}},[s._v("#")]),s._v(" 使用 Nest CLI 创建项项目并运行：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("nest new xxx "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# xxx 代表项目名称")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);