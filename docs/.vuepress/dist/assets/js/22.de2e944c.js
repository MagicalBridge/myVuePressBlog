(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{395:function(s,t,a){"use strict";a.r(t);var n=a(44),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栈"}},[s._v("#")]),s._v(" 栈")]),s._v(" "),a("h2",{attrs:{id:"栈-后入先出的数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栈-后入先出的数据结构"}},[s._v("#")]),s._v(" 栈：后入先出的数据结构")]),s._v(" "),a("p",[s._v("栈是一种遵从后进先出（LIFO）原则的有序集合。"),a("strong",[s._v("新添加或者待删除")]),s._v("的元素都保存在栈的同一端，称作栈顶，另一端就叫栈底。在栈里，新的元素都靠近栈顶，旧元素都接近栈底。")]),s._v(" "),a("p",[s._v("在现实生活中，一摞书或者餐厅里面叠放的盘子都是栈的应用场景。")]),s._v(" "),a("p",[s._v("栈也被用在编程语言的编译器和内存中保存变量、方法调用等，也被用于浏览器历史记录（浏览器的返回按钮）。")]),s._v(" "),a("h3",{attrs:{id:"创建一个基于数组的栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建一个基于数组的栈"}},[s._v("#")]),s._v(" 创建一个基于数组的栈")]),s._v(" "),a("p",[s._v("创建一个类来表示栈")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Stack")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("items "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("我们需要一种数据结构来保存栈里的元素, 我们选择数组, 数组允许我们在任何位置添加或者删除元素。由于栈遵循LIFO原则，需要对元素的插入和删除功能进行限制，我们需要声明一些方法。")]),s._v(" "),a("ul",[a("li",[s._v("push(element): 添加一个（或者几个）新元素到栈顶。")]),s._v(" "),a("li",[s._v("pop(): 移除栈顶的元素，同时返回被移除的元素。")]),s._v(" "),a("li",[s._v("peek(): 返回栈顶的元素，不对栈做任何修改（该方法不会移除栈顶的元素，仅仅返回它）。")]),s._v(" "),a("li",[s._v("isEmpty(): 如果栈里面没有任何元素返回true，否则返回false。")]),s._v(" "),a("li",[s._v("clear(): 移除栈里面的所有元素")]),s._v(" "),a("li",[s._v("size(): 返回栈里面的元素个数，该方法和数组的length属性很类似。")])]),s._v(" "),a("h3",{attrs:{id:"向栈添加元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#向栈添加元素"}},[s._v("#")]),s._v(" 向栈添加元素")]),s._v(" "),a("p",[s._v("我们要实现的第一个方法是push，该方法负责往栈里面添加新的元素，有一点很重要：该方法只添加元素到栈顶，也就是栈的末尾，push方法可以如下这样写。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("element")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);