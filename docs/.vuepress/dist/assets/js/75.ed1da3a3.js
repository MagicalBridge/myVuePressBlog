(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{472:function(s,e,a){"use strict";a.r(e);var t=a(44),n=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"node基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node基础"}},[s._v("#")]),s._v(" Node基础")]),s._v(" "),a("h2",{attrs:{id:"node-js简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js简介"}},[s._v("#")]),s._v(" node.js简介")]),s._v(" "),a("p",[s._v("node.js 是⼀个 JS 的服务端运⾏环境，简单的来说，他是在 JS 语⾔规范的基础上，封装了⼀些服务端的运⾏时对象，让我们能够简单实现⾮常多的业务功能。")]),s._v(" "),a("h2",{attrs:{id:"node-js-的安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-的安装"}},[s._v("#")]),s._v(" node.js 的安装")]),s._v(" "),a("p",[s._v("我们可以使⽤多种⽅式来安装 node.js，node.js 本质上也是⼀种软件，我们可以使⽤直接下载⼆进制安装⽂件安装，通过系统包管理进⾏安装或者通过源码⾃⾏编译均可。")]),s._v(" "),a("p",[s._v("⼀般来讲，对于个⼈开发的电脑，我们推荐直接通过node.js 官⽹的⼆进制安装⽂件来安装。对于打包上线的⼀些 node.js 环境，也可以通过⼆进制编译的形式来安装。")]),s._v(" "),a("p",[s._v("安装成功之后，我们的 node 命令就会⾃动加⼊我们的系统环境变量 path 中，我们就能直接在全局任意位置，使⽤ node 命令访问到我们刚才安装的"),a("strong",[s._v("node可执⾏命令⾏⼯具")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"node-js-版本切换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-版本切换"}},[s._v("#")]),s._v(" node.js 版本切换")]),s._v(" "),a("p",[s._v("在个⼈电脑上，我们可以安装⼀些⼯具，对 node.js 版本进⾏切换，例如 nvm 和 n。")]),s._v(" "),a("p",[s._v("nvm 的全称就是 node version manager，意思就是能够管理 node 版本的⼀个⼯具，它提供了⼀种直接通过shell 执⾏的⽅式来进⾏安装。简单来说，就是通过将多个 node 版本安装在指定路径，然后通过 nvm 命令切换时，就会切换我们环境变量中 node命令指定的实际执⾏的软件路径。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -o-https://raw.githubusercontent.com/nvmsh/nvm/v0.35.3/install.sh "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("安装成功之后，我们就能在当前的操作系统中使⽤多个node.js 版本。")]),s._v(" "),a("h2",{attrs:{id:"node-js-的包管理工具-npm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-的包管理工具-npm"}},[s._v("#")]),s._v(" node.js 的包管理⼯具 npm")]),s._v(" "),a("p",[s._v("我们对 npm 应该都⽐较熟悉了，它是 node.js 内置的⼀款⼯具，⽬的在于安装和发布符合 node.js 标准的模块，从⽽实现社区共建的⽬的繁荣整个社区。")]),s._v(" "),a("p",[s._v("npx 是 npm@5 之后新增的⼀个命令，它使得我们可以在不安装模块到当前环境的前提下，使⽤⼀些 cli 功能。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 此时全局安装了 create-react-app")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" i -g create-react-app\ncreate-react-app some-repo\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 此时⽆论是项⽬中还是全局都没有安装 createreact-app (但实际上是安装了的，但表现确实像没有安装)")]),s._v("\nnpx create-react-app some-repo\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"node-js-的底层依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-的底层依赖"}},[s._v("#")]),s._v(" node.js 的底层依赖")]),s._v(" "),a("p",[s._v("node.js 的主要依赖⼦模块有以下内容：")]),s._v(" "),a("ul",[a("li",[s._v("V8 引擎：主要是 JS 语法的解析，有了它才能识别 JS语法")]),s._v(" "),a("li",[s._v("libuv: c 语⾔实现的⼀个⾼性能异步⾮阻塞 IO 库，⽤来实现 node.js 的事件循环")]),s._v(" "),a("li",[s._v("http-parser/llhttp: 底层处理 http 请求，处理报⽂，解析请求包等内容")]),s._v(" "),a("li",[s._v("openssl: 处理加密算法，各种框架运⽤⼴泛")]),s._v(" "),a("li",[s._v("zlib: 处理压缩等内容")])]),s._v(" "),a("h2",{attrs:{id:"node-js-常⻅内置模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-常⻅内置模块"}},[s._v("#")]),s._v(" node.js 常⻅内置模块")]),s._v(" "),a("p",[s._v("node.js 中最主要的内容，就是实现了⼀套 CommonJS的模块化规范，以及内置了⼀些常⻅的模块。")]),s._v(" "),a("ul",[a("li",[s._v("fs: ⽂件系统，能够读取写⼊当前安装系统环境中硬盘的数据")]),s._v(" "),a("li",[s._v("path: 路径系统，能够处理路径之间的问题")]),s._v(" "),a("li",[s._v("crypto: 加密相关模块，能够以标准的加密⽅式对我们的内容进⾏加解密")]),s._v(" "),a("li",[s._v("dns: 处理 dns 相关内容，例如我们可以设置 dns 服务器等等")]),s._v(" "),a("li",[s._v("http: 设置⼀个 http 服务器，发送 http 请求，监听响应等等")]),s._v(" "),a("li",[s._v("readline: 读取 stdin 的⼀⾏内容，可以读取、增加、删除我们命令⾏中的内容")]),s._v(" "),a("li",[s._v("os: 操作系统层⾯的⼀些 api，例如告诉你当前系统类型及⼀些参数")]),s._v(" "),a("li",[s._v("vm: ⼀个专⻔处理沙箱的虚拟机模块，底层主要来调⽤ v8 相关 api 进⾏代码解析")])]),s._v(" "),a("h2",{attrs:{id:"文章列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文章列表"}},[s._v("#")]),s._v(" 文章列表")]),s._v(" "),a("p",[a("RouterLink",{attrs:{to:"/node/docs/child_process.html"}},[s._v("child_process模块")])],1)])}),[],!1,null,null,null);e.default=n.exports}}]);