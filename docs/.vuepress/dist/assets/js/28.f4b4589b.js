(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{398:function(t,a,s){"use strict";s.r(a);var e=s(44),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"排序算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序算法"}},[t._v("#")]),t._v(" 排序算法")]),t._v(" "),s("h2",{attrs:{id:"冒泡排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#冒泡排序"}},[t._v("#")]),t._v(" 冒泡排序")]),t._v(" "),s("p",[t._v("冒泡排序是入门级的算法，但也有一些有趣的玩法，通常来说，冒泡排序有三种写法：")]),t._v(" "),s("ul",[s("li",[t._v("一边比较一边向后两两交换，将最大值/最小值冒泡到最后一位；")]),t._v(" "),s("li",[t._v("经过优化的写法：使用一个变量记录当前轮次的比较是否发生过交换，如果没有发生交换比较已经有序，不再继续排序。")]),t._v(" "),s("li",[t._v("进一步优化的写法：\b除了使用变量记录当前轮次是否发生交换外，再使用一个变量记录上次发生交换的位置，下一轮排序时到达上次交换的位置就停止比较。")])])])}),[],!1,null,null,null);a.default=r.exports}}]);