(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{358:function(t,s,a){t.exports=a.p+"assets/img/01.afa2d84e.png"},359:function(t,s,a){t.exports=a.p+"assets/img/02.35e2c446.gif"},395:function(t,s,a){"use strict";a.r(s);var n=a(44),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"栈和队列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#栈和队列"}},[t._v("#")]),t._v(" 栈和队列")]),t._v(" "),n("h2",{attrs:{id:"概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),n("p",[t._v("在数组中，可以通过索引访问 随机元素。但是，在某些情况下，可能需要限制处理的顺序。")]),t._v(" "),n("p",[t._v("这里我们会介绍 先入先出 和 后入先出；以及两个相应的线性数据结构 队列和栈。")]),t._v(" "),n("h3",{attrs:{id:"栈-后入先出的数据结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#栈-后入先出的数据结构"}},[t._v("#")]),t._v(" 栈：后入先出的数据结构")]),t._v(" "),n("p",[t._v("栈是一种遵从后进先出（LIFO）原则的有序集合。"),n("strong",[t._v("新添加或者待删除")]),t._v("的元素都保存在栈的同一端，称作栈顶，另一端就叫栈底。在栈里，新的元素都靠近栈顶，旧元素都接近栈底。")]),t._v(" "),n("p",[t._v("在现实生活中，一摞书或者餐厅里面叠放的盘子都是栈的应用场景。")]),t._v(" "),n("p",[t._v("栈也被用在编程语言的编译器和内存中保存变量、方法调用等，也被用于浏览器历史记录（浏览器的返回按钮）。")]),t._v(" "),n("h4",{attrs:{id:"创建一个基于数组的栈"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建一个基于数组的栈"}},[t._v("#")]),t._v(" 创建一个基于数组的栈")]),t._v(" "),n("p",[t._v("创建一个类来表示栈")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("div",{staticClass:"highlight-lines"},[n("br"),n("br"),n("div",{staticClass:"highlighted"},[t._v(" ")]),n("br"),n("br"),n("br")]),n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stack")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("p",[t._v("我们需要一种数据结构来保存栈里的元素")]),t._v(" "),n("h3",{attrs:{id:"队列-先入先出的数据结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#队列-先入先出的数据结构"}},[t._v("#")]),t._v(" 队列：先入先出的数据结构")]),t._v(" "),n("p",[t._v("在FIFO数据结构中，将首先处理添加到队列中的第一个元素。\n"),n("img",{attrs:{src:a(358),alt:"队列"}})]),t._v(" "),n("p",[t._v("如上图所示，队列是典型的FIFO数据结构。插入（insert）操作也被称作入队（enqueue）,新元素始终被添加在队列的末尾。删除（delete）操作也被称为出队（dequeue）。你只能移除第一个元素。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(359),alt:"入队出队"}})]),t._v(" "),n("p",[t._v("在现实中，最常见的队列的例子就是排队。在电影院、自助餐厅、杂货店收银台，我们都会排队，排在第一位的人会先接受服务。")]),t._v(" "),n("h3",{attrs:{id:"队列-实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#队列-实现"}},[t._v("#")]),t._v(" 队列：实现")]),t._v(" "),n("p",[t._v("为了实现队列，我们可以使用数组")])])}),[],!1,null,null,null);s.default=e.exports}}]);